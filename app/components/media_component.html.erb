<%= render ::CompanionWindowsComponent.new(viewer:, stimulus_controller: 'media-tag transcript') do |component| %>
  <% component.with_header_button do %>
    <%= render CompanionWindows::ShareButtonComponent.new %>
  <% end %>
  <% component.with_header_button do %>
    <%= render CompanionWindows::ControlButtonComponent.new(action: 'click->companion-window#openModal', data: { target: 'accessibility' }, aria: { label: 'Accessibility', controls: 'accessibility' }) do %>
      <span class="button-label"><svg class="MuiSvgIcon-root AccessibilitySharp" focusable="false" aria-hidden="true" viewBox="0 0 24 24">
        <path d="M12 2c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2m9 7h-6v13h-2v-6h-2v6H9V9H3V7h18z"></path>
      </svg></span>
    <% end %>
  <% end %>

  <% component.with_header_button do %>
    <%= render CompanionWindows::FullscreenButtonComponent.new %>
  <% end %>

  <% component.with_drawer_button do %>
    <%= render CompanionWindows::ControlButtonComponent.new(action: 'click->tab#switch', controller: 'tab', aria: { label: 'Transcript', controls: 'transcript' }, role: 'tab', data: { transcript_target: 'button' }, hidden: !downloadable_caption_files?) do %>
      <%= render Icons::DescriptionComponent.new %>
    <% end %>
  <% end %>

  <% component.with_drawer_content do %>
    <%= render TabpanelComponent.new(id: 'transcript', hidden: true, title: 'Transcript', data: { companion_window_target: 'transcript' }) do |component| %>
      <% component.with_subheading do %>
        <div class="transcript-controls header-background">
          <div class="transcript-autoscroll">
            <label for="autoscroll">Auto scroll</label>
            <input data-transcript-target="autoscroll" type="checkbox" id="autoscroll">
          </div>
          <div class="transcript-language">
            <label class="visually-hidden" for="caption-languages">Select Language</label>
            <select name="caption-languages" id="caption-languages" data-transcript-target="captionLanguageSelect" data-action="transcript#selectLanguage">
              <option value="">Select Language</option>
            </select>
          </div>
        </div>
      <% end %>
      <% component.with_body do %>
        <div class="transcript" data-action="media-loaded@window->transcript#persistPlayer switch-transcript@window->transcript#switchTranscript media-data-loaded@window->transcript#load time-update@window->transcript#highlightCue" data-transcript-target="outlet">
          <%= transcript_message %>
        </div>
      <% end %>
    <% end %>
  <% end %>

  <% component.with_authorization_messages do %>
    <div data-controller="auth-restriction" data-action="auth-denied@window->auth-restriction#displayMessage auth-stanford-restricted@window->auth-restriction#displayStanfordRestriction auth-success@window->auth-restriction#hideLoginPrompt" hidden="true">
      <div class="authLinkWrapper" data-auth-restriction-target="locationRestriction" hidden>
        <%= render Icons::LockGlobeComponent.new %>
        <p class="loginMessage">Access is restricted to the reading room. See Access conditions for more information.</p>
      </div>
      <div class="authLinkWrapper" data-auth-restriction-target="stanfordRestriction" hidden>
        <svg class="MuiSvgIcon-root" focusable="false" viewBox="0 0 24 24" aria-hidden="true">
          # LockSharp
          <path data-auth-restriction-target="stanfordRestrictionNotLoggedInIcon" d="M20 8h-3V6.21c0-2.61-1.91-4.94-4.51-5.19C9.51.74 7 3.08 7 6v2H4v14h16zm-8 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2M9 8V6c0-1.66 1.34-3 3-3s3 1.34 3 3v2z"></path>
          # LockOpenSharp
          <path data-auth-restriction-target="stanfordRestrictionLoggedInIcon" hidden d="M20 8h-3V6.21c0-2.61-1.91-4.94-4.51-5.19C9.51.74 7 3.08 7 6h2c0-1.13.6-2.24 1.64-2.7C12.85 2.31 15 3.9 15 6v2H4v14h16zm-2 12H6V10h12zm-6-3c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2"></path>
        </svg>
        <p class="loginMessage" data-auth-restriction-target="stanfordRestrictionMessage"><%= I18n.t('restrictions.stanford_only') %></p>
        <button data-auth-restriction-target="stanfordLoginButton" data-action="media-tag#logIn">Log in</button>
        <button class="dismissButton" hidden data-auth-restriction-target="stanfordRestrictionDismissButton" data-action="auth-restriction#hideAuthRestrictionMessages" aria-label="Close access message">
          <svg class="MuiSvgIcon-root CloseSharp" focusable="false" aria-hidden="true" viewBox="0 0 24 24"><path d="M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"></path></svg>
        </button>
      </div>
      <div class="authLinkWrapper" data-auth-restriction-target="embargoRestriction" hidden>
        <%= render Icons::LockClockComponent.new %>
        <p class="loginMessage">Access is restricted until the embargo has elapsed</p>
      </div>
      <div class="authLinkWrapper" data-auth-restriction-target="embargoAndStanfordRestriction" hidden>
        <%= render Icons::LockClockComponent.new %>
        <p class="loginMessage"><%= I18n.t('restrictions.stanford_only') %></p>
        <button data-auth-restriction-target="embargoLoginButton" data-action="media-tag#logIn">Log in</button>
      </div>
      <div data-auth-restriction-target="noAccess" hidden>
         <%= render CompanionWindows::ContentNotAvailableComponent.new %>
      </div>
    </div>
  <% end %>

  <% component.with_body do %>
      <div data-controller="locked-media-poster" data-action="auth-success@window->locked-media-poster#hide needs-login@window->locked-media-poster#show auth-denied@window->locked-media-poster#show" role="presentation" style="flex: 1 0 100%;" hidden>
        <%= render LockedStatusComponent.new %>
      </div>

      <div data-controller="locked-audio-poster" data-action="auth-success@window->locked-audio-poster#hide needs-login@window->locked-audio-poster#show auth-denied@window->locked-audio-poster#show" role="presentation" style="flex: 1 0 100%;" hidden>
        <picture class="locked-status">
          <%# The explicitly empty alt is preferred here, since this image merely adds visual decoration. %>
          <%= image_tag 'waveform-audio-poster.svg', loading: 'lazy', alt: '', data: { locked_audio_poster_target: 'poster' } %>
        </picture>
      </div>

      <%= render Media::TagComponent.with_collection(resources_with_primary_file, druid:) %>
  <% end %>

  <% component.with_dialog do %>
    <%= render DialogComponent.new(dialog_id: 'accessibility', stimulus_target: 'accessibility') do |component| %>
      <%= component.with_header do %>
        Accessibility
      <% end %>

      <%= component.with_main do %>
        <% if downloadable_transcript_files? %>
          <p>A transcript is available for download. Click the share & download icon to download a transcript.</p>
        <% else %>
          <p>To request a transcript or other accommodation for this media item,
            please send a request along with a link to this item to
            <a href="mailto:purl-feedback@lists.stanford.edu">purl-feedback@lists.stanford.edu</a>.</p>
        <% end %>
      <% end %>

      <%= component.with_footer do %>
        <button data-action="click->companion-window#closeModal">Close</button>
      <% end %>
    <% end %>

    <link href="https://vjs.zencdn.net/8.6.1/video-js.css" rel="stylesheet" />
  <% end %>
<% end %>
